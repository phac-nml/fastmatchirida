{
    "$schema": "https://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/phac-nml/fastmatchirida/main/assets/schema_input.json",
    "title": "phac-nml/fastmatchirida pipeline - params.input schema",
    "description": "Schema for the file provided with params.input",
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "sample": {
                "type": "string",
                "pattern": "^\\S+$",
                "meta": ["irida_id"],
                "unique": true,
                "errorMessage": "Sample name must be provided and cannot contain spaces."
            },
            "sample_name": {
                "type": "string",
                "meta": ["id"],
                "errorMessage": "Sample name is optional, if provided will replace sample for filenames and outputs"
            },
            "mlst_alleles": {
                "type": "string",
                "format": "file-path",
                "pattern": "^\\S+\\.mlst(\\.subtyping)?\\.json(\\.gz)?$",
                "errorMessage": "MLST JSON file from locidex report, cannot contain spaces and must have the extension: '.mlst.json', '.mlst.json.gz', '.mlst.subtyping.json', or 'mlst.subtyping.json.gz'"
            },
            "fastmatch_category": {
                "type": "string",
                "errorMessage": "Has to be either query or reference",
                "description": "Identify whether a sample is query or reference",
                "fa_icon": "far fa-sticky-note",
                "enum": ["query", "reference"]
            },
            "new_isolates_date": {
                "type": "string",
                "meta": ["metadata_1"],
                "errorMessage": "new_isolates_date",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            },
            "predicted_primary_identification_name": {
                "type": "string",
                "meta": ["metadata_2"],
                "errorMessage": "predicted_primary_identification_name",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            },
            "predicted_primary_type_name": {
                "type": "string",
                "meta": ["metadata_3"],
                "errorMessage": "predicted_primary_type_name",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            },
            "genomic_address_name": {
                "type": "string",
                "meta": ["metadata_4"],
                "errorMessage": "genomic_address_name",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            },
            "national_outbreak_code": {
                "type": "string",
                "meta": ["metadata_5"],
                "errorMessage": "national_outbreak_code",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            },
            "national_outbreak_status": {
                "type": "string",
                "meta": ["metadata_6"],
                "errorMessage": "national_outbreak_status",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            },
            "provisional_outbreak_code": {
                "type": "string",
                "meta": ["metadata_7"],
                "errorMessage": "provisional_outbreak_code",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            },
            "related_specimen_primary_id": {
                "type": "string",
                "meta": ["metadata_8"],
                "errorMessage": "related_specimen_primary_id",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            },
            "related_specimen_relationship_type": {
                "type": "string",
                "meta": ["metadata_9"],
                "errorMessage": "related_specimen_relationship_type",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            },
            "calc_source_category": {
                "type": "string",
                "meta": ["metadata_10"],
                "errorMessage": "calc_source_category",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            },
            "geo_loc_name_country": {
                "type": "string",
                "meta": ["metadata_11"],
                "errorMessage": "geo_loc_name_country",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            },
            "geo_loc_name_state_province_territory": {
                "type": "string",
                "meta": ["metadata_12"],
                "errorMessage": "geo_loc_name_state_province_territory",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            },
            "pnc_analysis_date": {
                "type": "string",
                "meta": ["metadata_13"],
                "errorMessage": "pnc_analysis_date",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            },
            "cnphi_post_date": {
                "type": "string",
                "meta": ["metadata_14"],
                "errorMessage": "cnphi_post_date",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            },
            "calc_earliest_date": {
                "type": "string",
                "meta": ["metadata_15"],
                "errorMessage": "calc_earliest_date",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            },
            "fastmatch_result": {
                "type": "string",
                "meta": ["metadata_16"],
                "errorMessage": "fastmatch_result",
                "default": "",
                "pattern": "^[^\\n\\t\"]+$"
            }
        },
        "required": ["sample", "mlst_alleles"]
    }
}
